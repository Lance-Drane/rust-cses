name: "CI"

on:
  push:
    branches:
      - "main"
  pull_request:
    types:
      - "opened"
      - "synchronize"
      - "reopened"
    branches:
      - "main"
  #schedule:
  #- cron: '00 01 * * *'

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: "Test"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Run tests
        run: cargo test --all-targets --all-features

  fmt:
    name: "Rustfmt"
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: "Clippy"
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - name: Linting
        run: cargo clippy --all-targets --all-features -- -Wclippy::pedantic -Dwarnings
